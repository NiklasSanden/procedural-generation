this->sourceCode = {"#version 450 core\nout vec4 FragColour;\n\nvoid main()\n{\n	FragColour = vec4(1.0, 0.0, 0.0, 1.0);\n}", "#version 450 core\nlayout (location = 0) in vec3 aPos;\n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\nuniform mat4 normal;\n\nvoid main()\n{\n    gl_Position = projection * view * model * vec4(aPos, 1.0);\n}", "#version 450 core\nout vec4 FragColour;\n\nin vec3 FragPosView;\nin vec3 LightPosView;\nin vec3 Normal;\n\nstruct Material {\n	vec3 ambient;\n	vec3 diffuse;\n	vec3 specular;\n	float shininess;\n};\nuniform Material material;\n\nstruct Light {\n	vec3 position; // in world coordinates\n	vec3 ambient;\n	vec3 diffuse;\n	vec3 specular;\n};\nuniform Light light; \n\nvoid main()\n{\n	// ambient\n	vec3 ambient = light.ambient * material.ambient;\n	\n	// diffuse\n	vec3 lightDirection = normalize(LightPosView - FragPosView);\n	vec3 normal = normalize(Normal);\n	float difference = max(dot(normal, lightDirection), 0.0);\n	vec3 diffuse = light.diffuse * (difference * material.diffuse);\n\n	// specular\n	vec3 viewDirection = normalize(-FragPosView); // viewPos - fragPosView, but viewPos is (0, 0, 0) in viewspace\n	vec3 reflectDirection = reflect(-lightDirection, normal);\n	float spec = pow(max(dot(viewDirection, reflectDirection), 0.0), material.shininess);\n	vec3 specular = light.specular * (spec * material.specular);\n\n	vec3 result = ambient + diffuse + specular;\n	FragColour = vec4(result, 1.0);\n}", "#version 450 core\nlayout (location = 0) in vec3 aPos;\nlayout (location = 1) in vec3 aNormal;\n\nout vec3 FragPosView;\nout vec3 LightPosView;\nout vec3 Normal;\n\nstruct Light {\n	vec3 position; // in world coordinates\n	vec3 ambient;\n	vec3 diffuse;\n	vec3 specular;\n};\nuniform Light light; \n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\nuniform mat3 normal;\n\nvoid main()\n{\n    gl_Position = projection * view * model * vec4(aPos, 1.0);\n\n	FragPosView = vec3(view * model * vec4(aPos, 1.0));\n	LightPosView = vec3(view * vec4(light.position, 1.0));\n	Normal = normal * aNormal;\n}", "#version 450 core\nout vec4 FragColour;\n\nin vec2 texCoord;\n\n// textures\nuniform sampler2D texture0;\n\nvoid main()\n{\n	FragColour = texture(texture0, texCoord);\n}", "#version 450 core\nlayout (location = 0) in vec3 aPos;\nlayout (location = 1) in vec2 aTexCoord;\n\nout vec2 texCoord;\n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\nuniform mat4 normal;\n\nvoid main()\n{\n    gl_Position = projection * view * model * vec4(aPos, 1.0);\n	texCoord = aTexCoord;\n}" };
this->fileNames = { "chunk.frag", "chunk.vert", "default.frag", "default.vert", "textureDefault.frag", "textureDefault.vert" };